name: Launch Runner

on:
  repository_dispatch:
    types:
      - runner_start

jobs:
  forward:
    runs-on: ubuntu-latest
    env:
      FORWARD_ADMIN_ACCESS_TOKEN: ${{ secrets.FORWARD_ADMIN_ACCESS_TOKEN }}
      FORWARD_ADMIN_REPOSITORY: ${{ secrets.FORWARD_ADMIN_REPOSITORY }}
      GH_TOKEN: ${{ secrets.ADMIN_ACCESS_TOKEN }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: quota
        run: |
          USERNAME=$(gh api user | jq -r '.login')
          LIMITS=$(gh api -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28" "/users/${USERNAME}/settings/billing/actions")
          USED=$(printf "%.0f" "$(echo $LIMITS|jq -r '.total_minutes_used')")          
          FREE=$(printf "%.0f" "$(echo $LIMITS|jq -r '.included_minutes')")

          export ACCESS_TOKEN="${{ github.event.client_payload.access_token }}"
          export REPOSITORY="${{ github.event.client_payload.repository }}"
          if [ -z "$ACCESS_TOKEN" ] || [ -z "$REPOSITORY" ]; then
            echo "Error: ACCESS_TOKEN o REPOSITORY empty"
            exit 1
          fi

          if [ "$USED" -lt "$FREE" ]; then
            echo "USED $USED is less than FREE $FREE"
          elif [ -n "${FORWARD_ADMIN_ACCESS_TOKEN}" ] && [ -n "${FORWARD_ADMIN_REPOSITORY}" ]; then
            echo "USED $USED is greater or equal than FREE $FREE"
            curl -X POST \
              -H "Authorization: token ${FORWARD_ADMIN_ACCESS_TOKEN}" \
              -H "Accept: application/vnd.github.v3+json" \
              https://api.github.com/repos/${FORWARD_ADMIN_REPOSITORY}/dispatches \
              -d "$(echo '{"event_type": "runner_start", "client_payload": {"repository": "'"${REPOSITORY}"'", "access_token": "'"${ACCESS_TOKEN}"'"}}')"
            exit 127
          fi
  launch:
    runs-on: ubuntu-latest
    needs:
      - forward
    permissions:
      id-token: write
      contents: write
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: false
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: import keys
        env:
          GPG: ${{ secrets.GPG }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        run: |
          sudo apt update && sudo apt install -yq pinentry-tty
          echo "$GPG" > /tmp/tempkey.asc
          echo ${GPG_PASSPHRASE}| gpg --batch --yes --passphrase-fd 0 --pinentry-mode loopback --import <(cat /tmp/tempkey.asc)
      - name: connect
        run: |
          mkdir -p $HOME/runner
          cd $HOME/runner
          curl -o actions-runner-linux-x64-2.317.0.tar.gz -L https://github.com/actions/runner/releases/download/v2.317.0/actions-runner-linux-x64-2.317.0.tar.gz
          echo "9e883d210df8c6028aff475475a457d380353f9d01877d51cc01a17b2a91161d  actions-runner-linux-x64-2.317.0.tar.gz" | shasum -a 256 -c
          tar xzf ./actions-runner-linux-x64-2.317.0.tar.gz
      - name: run
        run: |
          echo "${{ toJson(github.event) }}"
          export ACCESS_TOKEN="${{ github.event.client_payload.access_token }}"
          export REPOSITORY="${{ github.event.client_payload.repository }}"
          if [ -z "$ACCESS_TOKEN" ] || [ -z "$REPOSITORY" ]; then
            echo "Error: ACCESS_TOKEN o REPOSITORY empty"
            exit 1
          fi
          
          REG_TOKEN=$(curl -X POST -H "Authorization: token ${ACCESS_TOKEN}" -H "Accept: application/vnd.github+json" https://api.github.com/repos/${REPOSITORY}/actions/runners/registration-token | jq .token --raw-output)
          cd /home/runner/runner
          
          ./config.sh --unattended --url https://github.com/${REPOSITORY} --token ${REG_TOKEN} --replace --ephemeral --pat "${ACCESS_TOKEN}"
          
          cleanup() {
            echo "Removing runner..."
            ./config.sh remove --token ${REG_TOKEN}
          }
          
          trap cleanup EXIT SIGINT SIGTERM
          
          ./run.sh
